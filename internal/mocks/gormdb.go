// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	gorm "gorm.io/gorm"
)

// GormDB is an autogenerated mock type for the GormDB type
type GormDB struct {
	mock.Mock
}

// AutoMigrate provides a mock function with given fields: _a0
func (_m *GormDB) AutoMigrate(_a0 ...interface{}) error {
	var _ca []interface{}
	_ca = append(_ca, _a0...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AutoMigrate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(...interface{}) error); ok {
		r0 = rf(_a0...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Create provides a mock function with given fields: _a0
func (_m *GormDB) Create(_a0 interface{}) *gorm.DB {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 *gorm.DB
	if rf, ok := ret.Get(0).(func(interface{}) *gorm.DB); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gorm.DB)
		}
	}

	return r0
}

// NewGormDB creates a new instance of GormDB. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGormDB(t interface {
	mock.TestingT
	Cleanup(func())
}) *GormDB {
	mock := &GormDB{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
